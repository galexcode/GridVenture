add a copy/cut/paste system.
add a history system to undo and redo

------------------------------------------------------------------------------------------------------

make it so that when you press G, it makes ALL blocks (except ROCK) obey gravity. that way you can stack shit.

------------------------------------------------------------------------------------------------------

make it so that when you place materials, you don't replace others.
e.g. when you place fire, it doesn't replace rock. it only gets placed in places where there is nothing (where there is air).

------------------------------------------------------------------------------------------------------

PREFORMANCE INCREASE
modify the print_cells to only print cells that have changed. i.e. only print the elements in the grid[][].matChanged that are NOT M_no_change
# update #
this would no longer work because gravity doesn't fuck around with matChanged.

------------------------------------------------------------------------------------------------------

make rippling water. (low priority)

------------------------------------------------------------------------------------------------------

make animals that jump around.
They eat grass.
when they feast on grass, there is some chance that they will give disgusting animal birth to another wild beast.
humans can eat them.
these animals and humans would probably not be materials.
I would have to make a seperate thing like an "entity" that can have more complex behavioral rules.


------------------------------------------------------------------------------------------------------

TREE GENERATION:
M_wood
make a material called "wood".
this material will have an 80% chance of spawning more wood in the cell directly above it.
it will have a 20% chance of spawning a material called "wood_branch" directly above it

M_wood_branch
woodbranch will have a relatively high chance of spawning leaves in the air around it.
woodbranch will then have a smaller chance of spawning more branches where the leaves are.
wood_branch has a good possibility of spawning "wood_end".

M_wood_end
wood_end only spawns leaves_end and some leaves in the air around itself.

M_leaves
leaves have a small chance of spawning other leaves around themselves.
they have a much much higher chance of spawning "leaves_end"

M_leaves_end
leaves_end have a very very very small chance of spawning fruit in the air around them.
once the fruit is spawned, it then saturates the leaves with it's fruitiness and the leaves can no longer spawn fruit.

All of the above materials can be burnt.
However, they should burn for different lengths of time.
From fastest burning to slowest burning:

	slow->	leaves_end
			leaves
			wood_end
			wood_branch
	fast->	wood
leaves_end have a very very very small chance of spawning fruit in the air around them.
once the fruit is spawned, it then saturates the leaves with it's fruitiness and the leaves can no longer spawn fruit.

------------------------------------------------------------------------------------------------------
 
 HIGH priority
 
 make grass_roots want to pass water to the grass_roots below them. (low probability of passing water to the grass_roots to the side of them. super low priority of passing water to the roots above them.)
 
 make saturated grass_roots colored differently than normal grass_roots?? that would be nice. to see the water moving through.
 
 this will probably require that you make the satEffect[].affectMat be evaluated before the decay of saturated materials.
 whatever. that makes sense anyway. do it.
 
 make grass_roots grow grass 
 
------------------------------------------------------------------------------------------------------
 
 HIGH PRIORITY
 
 have a way of showing which cells are saturated with what.
 
 here is a diagram:
 
		 . - color of material in cell
		 # - color of material saturating cell
 
1x1 // no indication of the saturating material
	. 

2x2 // small indication of the saturating material
	. .
	. #

4x4 // decent indication
	. . . .
	. # # .
	. # # .
	. . . .

8x8 // good show of saturating material color.
	. . . . . . . .
	. . . . . . . .
	. . # # # # . .
	. . # # # # . .
	. . # # # # . .
	. . # # # # . .
	. . . . . . . .
	. . . . . . . .

and so on in this order. each other cell size should similarly have the color of the saturating material only take up a quarter of the area (and be centered on the cell)

------------------------------------------------------------------------------------------------------

make the GRID_SIZE based on the gui width. that way we can achieve maximum efficiency. cells beneath the gui window(s) will not be evaluated.

------------------------------------------------------------------------------------------------------

add a search bar in the selection gui.
allow the user to search through all the materials by name.

also allow the user to filter the materials by category:
	allow the user to only show block with/without gravity (and maybe allow to specifically search by gravity grade)

------------------------------------------------------------------------------------------------------

